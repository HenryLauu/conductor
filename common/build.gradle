buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath "com.github.vmg.protogen:protogen-codegen:${revProtogenCodegen}"
    }
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter'
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    implementation "org.apache.commons:commons-lang3"

    implementation "com.github.rholder:guava-retrying:${revGuavaRetrying}"

    implementation "org.apache.bval:bval-jsr:${revBval}"

    implementation "com.google.protobuf:protobuf-java:${revProtoBuf}"
    implementation "com.github.vmg.protogen:protogen-annotations:${revProtogenAnnotations}"

    implementation "com.fasterxml.jackson.core:jackson-databind"
    implementation "com.fasterxml.jackson.core:jackson-core"
}

import com.github.vmg.protogen.ProtoGenTask

task protogen(dependsOn: jar, type: ProtoGenTask) {
    protoPackage = "conductor.proto"
    javaPackage = "com.netflix.conductor.proto"
    goPackage = "github.com/netflix/conductor/client/gogrpc/conductor/model"

    protosDir = new File("${rootDir}/grpc/src/main/proto")
    mapperDir = new File("${rootDir}/grpc/src/main/java/com/netflix/conductor/grpc")
    mapperPackage = "com.netflix.conductor.grpc";

    sourceJar = jar.archivePath
    sourcePackage = "com.netflix.conductor.common"
    outputs.dir protosDir
    outputs.dir mapperDir
}
